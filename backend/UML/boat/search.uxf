<diagram program="umletino" version="15.1"><zoom_level>5</zoom_level><help_text>Space for diagram notes</help_text><element><id>Relation</id><coordinates><x>1205</x><y>380</y><w>110</w><h>20</h></coordinates><panel_attributes>lt=&lt;-
Post request from client</panel_attributes><additional_attributes>200;20;10;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1400</x><y>370</y><w>60</w><h>15</h></coordinates><panel_attributes>_:BoatController_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1425</x><y>380</y><w>15</w><h>290</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;560</additional_attributes></element><element><id>Relation</id><coordinates><x>1430</x><y>405</y><w>135</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
request parameter</panel_attributes><additional_attributes>250;20;10;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1555</x><y>415</y><w>10</w><h>40</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1555</x><y>385</y><w>15</w><h>285</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;550</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1530</x><y>375</y><w>60</w><h>15</h></coordinates><panel_attributes>_:BoatService_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>410</y><w>110</w><h>20</h></coordinates><panel_attributes>lt=&lt;-
validate request parameter</panel_attributes><additional_attributes>200;20;10;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1820</x><y>390</y><w>60</w><h>15</h></coordinates><panel_attributes>_:Database_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1900</x><y>295</y><w>240</w><h>395</h></coordinates><panel_attributes>lt=.
Database
fg=blue
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1430</x><y>595</y><w>135</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
sorted boats or server error</panel_attributes><additional_attributes>10;20;250;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1205</x><y>600</y><w>230</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
If boats array: array of boats &amp; status 200</panel_attributes><additional_attributes>10;20;440;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1660</x><y>420</y><w>10</w><h>30</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1660</x><y>390</y><w>15</w><h>280</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;540</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1635</x><y>380</y><w>60</w><h>15</h></coordinates><panel_attributes>_:SearchQuery_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLFrame</id><coordinates><x>1160</x><y>295</y><w>980</w><h>395</h></coordinates><panel_attributes>HTTP GET: /boat</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLActor</id><coordinates><x>1185</x><y>320</y><w>30</w><h>55</h></coordinates><panel_attributes>Actor</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1280</x><y>360</y><w>60</w><h>15</h></coordinates><panel_attributes>_:BoatRoutes_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1305</x><y>390</y><w>10</w><h>25</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1305</x><y>370</y><w>15</w><h>65</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1310</x><y>400</y><w>125</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
request object</panel_attributes><additional_attributes>230;20;10;20</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1635</x><y>315</y><w>165</w><h>35</h></coordinates><panel_attributes>@author Youri Janssen

Sequence diagrams of the GET /boat API


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1945</x><y>400</y><w>15</w><h>220</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;420</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1920</x><y>390</y><w>60</w><h>15</h></coordinates><panel_attributes>_:BoatModel_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1425</x><y>410</y><w>10</w><h>50</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1205</x><y>450</y><w>230</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
error message(s) and status 400
</panel_attributes><additional_attributes>10;20;440;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1430</x><y>445</y><w>135</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
error message(s)</panel_attributes><additional_attributes>10;20;250;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1425</x><y>605</y><w>10</w><h>25</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1200</x><y>390</y><w>10</w><h>255</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>760</x><y>150</y><w>85</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Composition</panel_attributes><additional_attributes>150;20;10;20</additional_attributes></element><element><id>UMLNote</id><coordinates><x>715</x><y>0</y><w>205</w><h>145</h></coordinates><panel_attributes>COMPOSITION Relationship characteristics:

Strong Ownership: The container class (whole) has a direct 
responsibility for the creation and destruction of the component 
class (part). The part objects belong exclusively to the container.

Lifecycle Dependency: The lifecycle of the parts is closely tied to 
the lifecycle of the whole. When the whole is created, its parts are
 created. When the whole is destroyed, its parts are also 
destroyed.

Aggregation: Composition is a form of aggregation where the 
parts are strongly associated with the whole. Aggregation 
represents a weaker relationship where parts can exist 
independently of the whole.

bg=white
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>555</x><y>150</y><w>100</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
Implements / Realizes</panel_attributes><additional_attributes>180;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>345</x><y>150</y><w>95</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
Dependency / Uses</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>UMLNote</id><coordinates><x>305</x><y>80</y><w>190</w><h>65</h></coordinates><panel_attributes>DEPENDENCY Relationship:
The dependent class uses the methods, attributes, types or other
elements of the supplier class. This can be in the form of method
calls, parameter types, property types, etc. 

bg=white



</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>220</x><y>195</y><w>190</w><h>85</h></coordinates><panel_attributes>BoatRoutes
The BoatRoutes class is responsable for handling and setting 
up the /boat HTTP routes and its conventions. 
--
BoatController:
The BoatController class is responsible for receiving 
and processing
incoming HTTP requests on the /boat route from the client 
and generate appropriate responses. 
It sets the appropriate status code in the response to convey 
the outcome of the request.
bg=blue

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>220</x><y>415</y><w>190</w><h>85</h></coordinates><panel_attributes>BoatService:
The BoatService is responsible for handling business logic.
--
Boat:
The Boat class is responsable for creating a Boat
 business model instance. 
It includes the business logic a boat should adhere to.

bg=yellow


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>205</x><y>610</y><w>205</w><h>125</h></coordinates><panel_attributes>BoatDatabaseInterface:
The use of the BoatDatabaseInterface ensures that
the database can easily be stubbed for testing purposes. The 
BoatService class doesn't need to know the exact implementation 
of the database; it only requires an object that adheres to the 
BoatDatabaseInterface contract, which is in this case
is either the BoatSequelizeDatabase or the BoatMysqlDatabase. 
--
BoatSequelizeDatabase:
The BoatSequelizeDatabase is responsible for handling data
storage and retrieval operations. It uses the Boat, Boatfacility and
 Facility Models (database tables) to do this. 
It uses the Boat interface to
define the properties that a boat object should adhere to.


bg=red


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1145</x><y>205</y><w>140</w><h>60</h></coordinates><panel_attributes>The actor represents an 
external entity that interacts 
with the system we're modeling.
It most cases this will be via
a browser client.
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLActor</id><coordinates><x>1240</x><y>210</y><w>30</w><h>55</h></coordinates><panel_attributes>Actor</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1510</x><y>205</y><w>15</w><h>60</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1420</x><y>190</y><w>115</w><h>75</h></coordinates><panel_attributes>The lifeline represents an
individual participant in an 
interaction, which could be 
an object, an actor, or 
a component.
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1290</x><y>205</y><w>125</w><h>60</h></coordinates><panel_attributes>Activation refers to the period 
of time during which an object 
or participant is actively processing 
a message or performing an action. 
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1550</x><y>205</y><w>105</w><h>60</h></coordinates><panel_attributes>Messages are used to represent 
interactions or communication 
between lifelines (participants) 
within a system.

bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1400</x><y>215</y><w>10</w><h>40</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1500</x><y>195</y><w>30</w><h>15</h></coordinates><panel_attributes>_:Object_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1660</x><y>185</y><w>115</w><h>80</h></coordinates><panel_attributes>Synchronous Message: 
Represents a communication where 
the message receiver processes the 
request immediately and possibly 
sends a response back to the sender 
directly. 
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1780</x><y>185</y><w>140</w><h>80</h></coordinates><panel_attributes>Asynchronous Message: 
Represents a communication 
where the message receiver starts an 
asynchronous operation in response
to the sender. While this occurs, other
task or requests can continue processing.
When the asynchronous operation completes,
the receiver prepares a response to the sender.
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1925</x><y>185</y><w>115</w><h>80</h></coordinates><panel_attributes>Return Message: 
Represents the response 
from the receiver to a 
previously sent (a)synchronous 
message. It indicates the completion 
of an operation and the result 
of that operation.
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1670</x><y>270</y><w>100</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
Synchronous message</panel_attributes><additional_attributes>180;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1800</x><y>270</y><w>100</w><h>20</h></coordinates><panel_attributes>lt=&lt;-
Asynchronous message</panel_attributes><additional_attributes>180;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1940</x><y>270</y><w>95</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
return message</panel_attributes><additional_attributes>10;20;170;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1200</x><y>365</y><w>15</w><h>305</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;590</additional_attributes></element><element><id>Relation</id><coordinates><x>1205</x><y>620</y><w>230</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
If server error: Server error message &amp; status 500</panel_attributes><additional_attributes>10;20;440;20</additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1200</x><y>655</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1555</x><y>655</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>510</x><y>25</y><w>190</w><h>120</h></coordinates><panel_attributes>IMPLEMENTATION/REALIZATION Relationship characteristics:

Interface: The source class in the implementation relationship is 
usually an interface (or abstract class). This type of class defines 
a contract or a set of methods that must be implemented by the 
classes that realize them.

Method Realization: The implementing class must provide 
functional implementations for all the methods declared in the 
interface or abstract class it is implementing. The signatures of 
the methods in the implementing class must match those 
specified in the interface or abstract class.



bg=white
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>570</x><y>320</y><w>205</w><h>60</h></coordinates><panel_attributes>BoatController
--
- boatService: BoatService
--
+ constructor(boatService: BoatService) 
+ searchBoats(request: Request, response: Response): Promise&lt;void&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>625</x><y>445</y><w>210</w><h>55</h></coordinates><panel_attributes>BoatService
--
- registerDatabase: BoatDatabaseInterface
--
+ constructor(boatDatabase: BoatDatabaseInterface)
+ searchBoats( name: string, limt: number, offset: number):
Promise&lt;Boat[] | string[] | 'server_error'&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>465</x><y>715</y><w>210</w><h>55</h></coordinates><panel_attributes>BoatSequelizeDatabase
--
+ searchBoats( name: string, limit: number, offset: number): 
Promise&lt;boolean&gt;
- findBoatsByName(name: string): Promise&lt;BoatModel[]&gt;
- mapBoatsData(boats: BoatModel[]): Promise&lt;Boat[]&gt; 
- sortBoatsAlphabetically(mappedBoats: Boat[]): Boat[]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>425</x><y>415</y><w>175</w><h>195</h></coordinates><panel_attributes>Boat
--
- _id: number
- name: string
- price_per_day_in_cents: number 
- capacity: number
- license_required: boolean
- skipper_required: boolean
- facilities: string
--
- constructor(
name: string, price_per_day_in_cents: number,
capacity: number, license_required: boolean,
skipper_required: boolean, facilities: string[]
)
+ createBoat(
name: string, price_per_day_in_cents: number,
capacity: number, license_required: boolean,
skipper_required: boolean, facilities: string[]
): Boat
+ createBoatWithId(
id: number, name: string, price_per_day_in_cents: number,
capacity: number, license_required: boolean,
skipper_required: boolean, facilities: string[]
): Boat
+ toJSON(): Object</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>605</x><y>635</y><w>215</w><h>35</h></coordinates><panel_attributes>&lt;&lt;BoatDatabaseInterface&gt;&gt;
--
+ searchBoats(name: string, limit: number, offset: number): 
Promise&lt;Boat[] | 'server_error'&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>410</x><y>195</y><w>380</w><h>220</h></coordinates><panel_attributes>lt=.
CONTROLLER
fg=blue
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>410</x><y>610</y><w>500</w><h>165</h></coordinates><panel_attributes>lt=.
DATA
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>410</x><y>415</y><w>445</w><h>195</h></coordinates><panel_attributes>lt=.
BUSINESS
fg=yellow
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>565</x><y>215</y><w>210</w><h>65</h></coordinates><panel_attributes>BoatRoutes
--
- router: Router 
- boatController: BoatController
--
+ constructor(boatController: BoatController)       
- setupRoutes(): void
- searchBoats(request: Request, response: Response): Promise&lt;void&gt;
+ getBoatRouter(): Router</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>650</x><y>665</y><w>70</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;.
Implements</panel_attributes><additional_attributes>120;10;120;60;10;60;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>665</x><y>275</y><w>50</w><h>55</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Composition</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>715</x><y>375</y><w>50</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Composition</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>715</x><y>495</y><w>50</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Composition</panel_attributes><additional_attributes>10;10;10;280</additional_attributes></element><element><id>UMLClass</id><coordinates><x>540</x><y>675</y><w>50</w><h>15</h></coordinates><panel_attributes>BoatModel</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>685</y><w>30</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
Uses</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>435</x><y>605</y><w>40</w><h>140</h></coordinates><panel_attributes>lt=&lt;.
Uses</panel_attributes><additional_attributes>10;10;10;260;60;260</additional_attributes></element><element><id>Relation</id><coordinates><x>595</x><y>495</y><w>60</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
Uses</panel_attributes><additional_attributes>10;80;100;80;100;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>440</x><y>280</y><w>105</w><h>35</h></coordinates><panel_attributes>@author Youri Janssen &amp; 
Thijs van Rixoort

Class Diagram of the /boat API
bg=blue
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>705</x><y>685</y><w>65</w><h>40</h></coordinates><panel_attributes>lt=.
Implements</panel_attributes><additional_attributes>10;20;110;20;110;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>690</x><y>715</y><w>210</w><h>50</h></coordinates><panel_attributes>BoatMysqlDatabase
--
+ searchBoats(name: string, limit: number, offset: number): 
Promise&lt;Boat[] | 'server_error'&gt;
+ getFacilitiesForBoat( boatId: number, pool: Pool ): Promise&lt;string[]&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1555</x><y>460</y><w>10</w><h>50</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1945</x><y>465</y><w>10</w><h>25</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1555</x><y>585</y><w>10</w><h>20</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1205</x><y>515</y><w>230</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
empty array ([]) and status 200
</panel_attributes><additional_attributes>10;20;440;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1425</x><y>510</y><w>10</w><h>15</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1845</x><y>460</y><w>10</w><h>35</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1745</x><y>545</y><w>15</w><h>35</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1945</x><y>605</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1425</x><y>655</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>595</x><y>575</y><w>245</w><h>150</h></coordinates><panel_attributes>lt=&lt;.
Uses</panel_attributes><additional_attributes>10;20;470;20;470;280</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1720</x><y>380</y><w>60</w><h>15</h></coordinates><panel_attributes>_:Boat_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1745</x><y>390</y><w>15</w><h>280</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;540</additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>440</y><w>110</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
error message(s) or null
</panel_attributes><additional_attributes>10;20;200;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1845</x><y>400</y><w>15</w><h>280</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;540</additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>450</y><w>295</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
search boats</panel_attributes><additional_attributes>570;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1430</x><y>500</y><w>135</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
No boats found</panel_attributes><additional_attributes>10;20;250;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1850</x><y>455</y><w>105</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
search boats</panel_attributes><additional_attributes>190;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1850</x><y>480</y><w>110</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
boats or null
</panel_attributes><additional_attributes>10;20;200;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1750</x><y>535</y><w>105</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
sort boats alphabetically</panel_attributes><additional_attributes>10;20;190;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1845</x><y>545</y><w>10</w><h>40</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>485</y><w>295</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
null
</panel_attributes><additional_attributes>10;20;570;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1755</x><y>570</y><w>100</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
sorted boats
</panel_attributes><additional_attributes>180;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>575</y><w>295</w><h>20</h></coordinates><panel_attributes>lt=&lt;.
sorted boats or server error</panel_attributes><additional_attributes>10;20;570;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>535</x><y>635</y><w>55</w><h>15</h></coordinates><panel_attributes>BoatfacilityModel</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>645</y><w>30</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
Uses</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>480</x><y>630</y><w>65</w><h>55</h></coordinates><panel_attributes>lt=&lt;.
Uses</panel_attributes><additional_attributes>10;90;10;20;110;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>470</x><y>675</y><w>55</w><h>15</h></coordinates><panel_attributes>FacilityModel</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2020</x><y>400</y><w>15</w><h>220</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;420</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1995</x><y>390</y><w>60</w><h>15</h></coordinates><panel_attributes>_:FacilityModel_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>2020</x><y>510</y><w>10</w><h>25</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>2020</x><y>605</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1850</x><y>500</y><w>180</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
get facilities</panel_attributes><additional_attributes>340;20;10;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1845</x><y>505</y><w>10</w><h>35</h></coordinates><panel_attributes>
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1850</x><y>525</y><w>180</w><h>25</h></coordinates><panel_attributes>lt=&lt;.
facilities or null
</panel_attributes><additional_attributes>10;20;340;20</additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1660</x><y>655</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1845</x><y>660</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLSpecialState</id><coordinates><x>1745</x><y>655</y><w>10</w><h>10</h></coordinates><panel_attributes>type=termination</panel_attributes><additional_attributes></additional_attributes></element></diagram>